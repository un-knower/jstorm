topology.name: record-local-topology
storm.cluster.mode: local
topology.spout.max.batch.size: 300
topology.tick.tuple.freq.secs: 3
topology.acker.executors: 1
topology.workers: 20
bolt.parallel.index: 1
bolt.parallel.newWord: 1
bolt.parallel.seg: 1
bolt.parallel.storeNewWord: 1
bolt.parallel.qc: 1
bolt.parallel.oracle: 1
spout.parallel: 1
bolt.parallel.hbase: 1

## kafka spout 相关配置
topology.mode: local


topology.max.spout.pending: 50

## 以下配置是反压配置，即限流机制，防止bolt处理速度慢导致阻塞
## 反压总开关
topology.backpressure.enable: true
## 高水位 －－ 当队列使用量超过这个值时，认为阻塞
topology.backpressure.water.mark.high: 0.8
## 低水位 －－ 当队列使用量低于这个量时， 认为可以解除阻塞
topology.backpressure.water.mark.low: 0.05
## 阻塞比例 －－ 当阻塞task数／这个component并发 的比例高于这值时，触发反压
topology.backpressure.coordinator.trigger.ratio: 0.1

## 反压采样周期， 单位ms
topology.backpressure.check.interval: 1000
## 采样次数和采样比例， 即在连续4次采样中， 超过（不包含）（4 ＊0.75）次阻塞才能认为真正阻塞， 超过（不包含）(4 * 0.75)次解除阻塞才能认为是真正解除阻塞
topology.backpressure.trigger.sample.rate: 0.75
topology.backpressure.trigger.sample.number: 4

# kafka 配置
#kafka.client.id: kafkaspout-id
## topic 分区
#kafka.broker.partitions: 1
#kafka.fetch.from.beginning: fasle
#kafka.topic: kafka-topic
#kafka.broker.hosts: 10.8.177.24:9092,10.8.177.25:9092,10.8.177.23:9092
#kafka.zookeeper.hosts: 10.8.177.23:2181,10.8.177.24:2181,10.8.177.25:2181
#storm.zookeeper.root: /jstorm
#kafka.group.id: kafkaspout
## 更新offset的间隔时间
kafka.offset.update.interval.ms: 300

##redsis
redis.host: 10.8.177.204
redis.port: 6379
redis.password: 12345678Az
redis.timeout: 2000
redis.maxTotal: 200
redis.maxIdle: 200
redis.maxWait: 10000
redis.database: 2
kafka.offset.redis.name: topic-offset